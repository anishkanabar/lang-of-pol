#!/bin/bash

#
# USAGE:
# From the terminal, run:
# sbatch run-training.job <path_to_conda_env>
#

#
#OPIONS FOR JOB ID:
#SBATCH --job-name=train-asr
#
#OPTIONS FOR EMAIL:
#SBATCH --output=/project/graziul/ra/%u/slurm_output/%j.%N.stdout
#SBATCH --error=/project/graziul/ra/%u/slurm_output/%j.%N.stderr
#
#OPTIONS FOR PARTITION:
#SBATCH --account=pi-graziul
#
#OPTIONS FOR JOB SIZE:
#SBATCH --partition=gpu
# Always set ntasks==gpus and ntasks-per-gpu=1
#SBATCH --nodes=1
#SBATCH --gpus=1
#SBATCH --ntasks=1
#SBATCH --ntasks-per-gpu=1
#SBATCH --mem-per-cpu=12G
#SBATCH --time=06:00:00
#

local_flag="$1"
env_dir="$2"
dataset_dir="$3"
logs_dir="$4"

if [ -z "$local_flag" ]  || [ -z "$env_dir" ] || [ -z "$dataset_dir" ] || [-z "$logs_dir" ]; then
    echo "Usage: sbatch run-training.job "
         "<local|cluster> <path_to_env> <path_to_data> <path_to_logs>"
    exit 1

elif [ ! -e "$env_dir" ]; then
    echo "Conda environment not found. See 'create_env.sh'. Exiting."
    exit 1
fi

if [ "$local_flag" == "cluster" ]; then
    echo "Activating conda"
    source 'env/conda_bashrc'
    conda activate "$env_dir"
else
    # XXX: might only be necessary if calling from python subprocess, not from shell script?
    cd "$(dirname "$0")"
fi

echo "Listing gpu nodes"
sh show_cuda_devices.sh
conda run -p "$env_dir" python tf_devices.py

echo "Running training script"
dataset='radio'
conda run -p "$env_dir" python train_deepspeech.py "$local_flag" "$dataset" "$dataset_dir" "$logs_dir"

